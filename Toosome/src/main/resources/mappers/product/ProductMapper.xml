<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.toosome.user.product.dao.IProductMapper">

	<resultMap type="productVO" id="productVO">
		<id property="productId" column="PRODUCT_ID" />
		<result property="productTitleName" column="PRODUCT_TITLE_NAME" />
		<result property="productSubName" column="PRODUCT_SUB_NAME" />
		<result property="productContent" column="PRODUCT_CONTENT" />
		<result property="productPrice" column="PRODUCT_PRICE" />
		<result property="productType" column="PRODUCT_TYPE" />
		<result property="productRegDate" column="PRODUCT_REG_DATE" />
		<result property="productReceivedAmount" column="PRODUCT_RECEIVED_AMOUNT" />
		<result property="productReceivedPrice" column="PRODUCT_RECEIVED_PRICE" />
		<result property="productLimitAmount" column="PRODUCT_LIMIT_AMOUNT" />
		<result property="productStar" column="PRODUCT_STAR" />
		<result property="productStartDay" column="PRODUCT_START_DAY" />
		<result property="productCheckCount" column="PRODUCT_CHECK_COUNT" />
		<result property="productState" column="PRODUCT_STATE" />
		<result property="productNew" column="PRODUCT_NEW" />
		<result property="productOnoff" column="PRODUCT_ONOFF" />
		<collection property="productImageVO" resultMap="productImageVO" />
		<collection property="productPrecautionsVO" resultMap="productPrecautionsVO" />
		<!--<collection property="memberVO" resultMap="memberVO" /> -->
	</resultMap>

	<resultMap type="productImageVO" id="productImageVO">
		<result property="productImageId" column="PRODUCT_IMAGE_ID" />
		<result property="productProductId" column="PRODUCT_PRODUCT_ID" />
		<result property="productImageName" column="PRODUCT_IMAGE_NAME" />
		<result property="productImageExtention" column="PRODUCT_IMAGE_EXTENTION" />
		<result property="productImageRoute" column="PRODUCT_IMAGE_ROUTE" />
	</resultMap>
	
	<resultMap type="productPrecautionsVO" id="productPrecautionsVO">
		<result property="productPrecautionsId" column="PRODUCT_PRECAUTIONS_ID" />
		<result property="productPrecautionsTitle" column="PRODUCT_PRECAUTIONS_TITLE" />
		<result property="productPrecautionsContent" column="PRODUCT_PRECAUTIONS_CONTENT" />
		<result property="productPrecautionsContentName1" column="PRODUCT_PRECAUTIONS_CONTENT_NAME1" />
		<result property="productPrecautionsContent1" column="PRODUCT_PRECAUTIONS_CONTENT1" />
		<result property="productPrecautionsContentName2" column="PRODUCT_PRECAUTIONS_CONTENT_NAME2" />
		<result property="productPrecautionsContent2" column="PRODUCT_PRECAUTIONS_CONTENT2" />
		<result property="productPrecautionsContentName3" column="PRODUCT_PRECAUTIONS_CONTENT_NAME3" />
		<result property="productPrecautionsContent3" column="PRODUCT_PRECAUTIONS_CONTENT3" />
		<result property="productPrecautionsOnoff" column="PRODUCT_PRECAUTIONS_ONOFF" />
	</resultMap>
	
	<resultMap type="productReviewBoardVO" id="productReviewBoardVO">
		<id property="productReviewBoardId" column="PRODUCT_REVIEW_BOARD_ID" />
		<result property="productId" column="PRODUCT_ID" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="productReviewBoardRating" column="PRODUCT_REVIEW_BOARD_RATING" />
		<result property="productReviewBoardContent" column="PRODUCT_REVIEW_BOARD_CONTENT" />
		<result property="productReviewBoardWriter" column="PRODUCT_REVIEW_BOARD_WRITER" />
		<result property="productReviewBoardRegDate" column="PRODUCT_REVIEW_BOARD_REG_DATE" />
	</resultMap>
	<!-- NEW상품 리스트 -->
	<select id="getproductnewList" resultMap="productVO">
		<![CDATA[ 
			SELECT A.PRODUCT_ID,
			A.PRODUCT_TITLE_NAME,
			A.PRODUCT_PRICE,
			A.PRODUCT_NEW,
			A.PRODUCT_STATE,
			B.PRODUCT_IMAGE_ID,
			B.PRODUCT_IMAGE_NAME,
			B.PRODUCT_IMAGE_EXTENTION,
			B.PRODUCT_IMAGE_ROUTE
			FROM PRODUCT A INNER
			JOIN PRODUCT_IMAGE B ON (A.PRODUCT_ID = B.PRODUCT_PRODUCT_ID)
			WHERE A.PRODUCT_NEW=1 AND PRODUCT_STATE NOT IN(0, 3) AND PRODUCT_START_DAY <= NOW();
		]]>
	</select>
	<!-- 커피상품 리스트 -->
	<select id="getcoffeeList" resultMap="productVO">
		<![CDATA[ 
			SELECT A.PRODUCT_ID,
			A.PRODUCT_TITLE_NAME,
			A.PRODUCT_PRICE,
			A.PRODUCT_NEW,
			A.PRODUCT_STATE,
			B.PRODUCT_IMAGE_ID,
			B.PRODUCT_IMAGE_NAME,
			B.PRODUCT_IMAGE_EXTENTION,
			B.PRODUCT_IMAGE_ROUTE
			FROM PRODUCT A INNER
			JOIN PRODUCT_IMAGE B ON (A.PRODUCT_ID = B.PRODUCT_PRODUCT_ID) 
			WHERE A.PRODUCT_TYPE=1 AND PRODUCT_STATE NOT IN(0, 3) AND PRODUCT_START_DAY <= NOW();
		]]>
	</select>
	<!-- 커피웨어상품 리스트 -->
	<select id="getcoffeewearList" resultMap="productVO">
		<![CDATA[ 
			SELECT A.PRODUCT_ID,
			A.PRODUCT_TITLE_NAME,
			A.PRODUCT_PRICE,
			A.PRODUCT_NEW,
			A.PRODUCT_STATE,
			B.PRODUCT_IMAGE_ID,
			B.PRODUCT_IMAGE_NAME,
			B.PRODUCT_IMAGE_EXTENTION,
			B.PRODUCT_IMAGE_ROUTE
			FROM PRODUCT A INNER
			JOIN PRODUCT_IMAGE B ON (A.PRODUCT_ID = B.PRODUCT_PRODUCT_ID) 
			WHERE A.PRODUCT_TYPE=2 AND PRODUCT_STATE NOT IN(0, 3) AND PRODUCT_START_DAY <= NOW();
		]]>
	</select>
	<!-- 기프트상품 리스트 -->
	<select id="getgiftList" resultMap="productVO">
		<![CDATA[ 
			SELECT A.PRODUCT_ID,
			A.PRODUCT_TITLE_NAME,
			A.PRODUCT_PRICE,
			A.PRODUCT_NEW,
			A.PRODUCT_STATE,
			B.PRODUCT_IMAGE_ID,
			B.PRODUCT_IMAGE_NAME,
			B.PRODUCT_IMAGE_EXTENTION,
			B.PRODUCT_IMAGE_ROUTE
			FROM PRODUCT A INNER
			JOIN PRODUCT_IMAGE B ON (A.PRODUCT_ID = B.PRODUCT_PRODUCT_ID)
			WHERE A.PRODUCT_TYPE=3 AND PRODUCT_STATE NOT IN(0, 3) AND PRODUCT_START_DAY <= NOW();
		]]>
	</select>
	<!-- 상품 디테일 -->
	<select id="getproductDetail" resultMap="productVO" parameterType="productVO">
		SELECT A.PRODUCT_ID,
		A.PRODUCT_TITLE_NAME,
		A.PRODUCT_SUB_NAME,
		A.PRODUCT_CONTENT,
		A.PRODUCT_PRICE,
		A.PRODUCT_TYPE,
		A.PRODUCT_REG_DATE,
		A.PRODUCT_RECEIVED_AMOUNT,
		A.PRODUCT_RECEIVED_PRICE,
		A.PRODUCT_LIMIT_AMOUNT,
		A.PRODUCT_STAR,
		A.PRODUCT_START_DAY,
		A.PRODUCT_CHECK_COUNT,
		A.PRODUCT_STATE,
		A.PRODUCT_NEW,
		A.PRODUCT_ONOFF,
		A.PRODUCT_STATE,
		B.PRODUCT_IMAGE_NAME,
		B.PRODUCT_IMAGE_EXTENTION,
		B.PRODUCT_IMAGE_ROUTE,
		C.PRODUCT_PRECAUTIONS_ID,
		C.PRODUCT_PRECAUTIONS_TITLE,
		C.PRODUCT_PRECAUTIONS_CONTENT,
		C.PRODUCT_PRECAUTIONS_CONTENT_NAME1,
		C.PRODUCT_PRECAUTIONS_CONTENT1,
		C.PRODUCT_PRECAUTIONS_CONTENT_NAME2,
		C.PRODUCT_PRECAUTIONS_CONTENT2,
		C.PRODUCT_PRECAUTIONS_CONTENT_NAME3,
		C.PRODUCT_PRECAUTIONS_CONTENT3,
		C.PRODUCT_PRECAUTIONS_ONOFF
		FROM PRODUCT A INNER JOIN
		PRODUCT_IMAGE B ON (A.PRODUCT_ID = B.PRODUCT_PRODUCT_ID)
		INNER JOIN 
		PRODUCT_PRECAUTIONS C ON (A.PRODUCT_ONOFF = C.PRODUCT_PRECAUTIONS_ONOFF)
        WHERE A.PRODUCT_ID=#{productId} AND A.PRODUCT_STATE != 3
	</select> 
	
	<select id="getproductDetailById" resultMap="productVO">
		SELECT A.PRODUCT_ID,
		A.PRODUCT_TITLE_NAME,
		A.PRODUCT_SUB_NAME,
		A.PRODUCT_PRICE,
		A.PRODUCT_NEW,
		A.PRODUCT_CONTENT,
		A.PRODUCT_ONOFF,
		A.PRODUCT_STATE,
		B.PRODUCT_IMAGE_ID,
		B.PRODUCT_IMAGE_NAME,
		B.PRODUCT_IMAGE_EXTENTION,
		B.PRODUCT_IMAGE_ROUTE,	
		C.PRODUCT_PRECAUTIONS_ID,
		C.PRODUCT_PRECAUTIONS_TITLE,
		C.PRODUCT_PRECAUTIONS_CONTENT,
		C.PRODUCT_PRECAUTIONS_CONTENT_NAME1,
		C.PRODUCT_PRECAUTIONS_CONTENT1,
		C.PRODUCT_PRECAUTIONS_CONTENT_NAME2,
		C.PRODUCT_PRECAUTIONS_CONTENT2,
		C.PRODUCT_PRECAUTIONS_CONTENT_NAME3,
		C.PRODUCT_PRECAUTIONS_CONTENT3,	
		C.PRODUCT_PRECAUTIONS_ONOFF
		FROM PRODUCT A INNER JOIN
		PRODUCT_IMAGE B ON (A.PRODUCT_ID = B.PRODUCT_PRODUCT_ID)
		INNER JOIN
		PRODUCT_PRECAUTIONS C ON (A.PRODUCT_ONOFF = C.PRODUCT_PRECAUTIONS_ONOFF)
		WHERE A.PRODUCT_ID=#{productId} AND A.PRODUCT_STATE != 3;
	</select> 
	<!-- 댓글 목록 -->
	<select id="productReviewList" resultMap="productReviewBoardVO">
	<![CDATA[
		SELECT PRODUCT_REVIEW_BOARD_ID, PRODUCT_ID, MEMBER_ID, PRODUCT_REVIEW_BOARD_RATING, PRODUCT_REVIEW_BOARD_CONTENT, PRODUCT_REVIEW_BOARD_WRITER, PRODUCT_REVIEW_BOARD_REG_DATE
		FROM PRODUCT_REVIEW_BOARD WHERE PRODUCT_ID = #{productId} ORDER BY PRODUCT_REVIEW_BOARD_ID DESC;
	]]>
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="productReviewInsert">
		INSERT INTO PRODUCT_REVIEW_BOARD (PRODUCT_REVIEW_BOARD_ID, PRODUCT_ID, MEMBER_ID, PRODUCT_REVIEW_BOARD_RATING, PRODUCT_REVIEW_BOARD_CONTENT, PRODUCT_REVIEW_BOARD_WRITER, PRODUCT_REVIEW_BOARD_REG_DATE
		) VALUES (
		#{productReviewBoardId},#{productId}, #{memberId},#{productReviewBoardRating},#{productReviewBoardContent},#{productReviewBoardWriter},NOW())
	</insert>
	<!-- 댓글 수정 -->
	<update id="productReviewUpdate">
		UPDATE PRODUCT_REVIEW_BOARD SET PRODUCT_REVIEW_BOARD_CONTENT = #{productReviewBoardContent}
		WHERE PRODUCT_REVIEW_BOARD_ID = #{productReviewBoardId}
	</update>
	<!-- 댓글 삭제 -->
	<delete id="productReviewDelete">
		DELETE FROM PRODUCT_REVIEW_BOARD WHERE PRODUCT_REVIEW_BOARD_ID = #{productReviewBoardId}
	</delete>
	
 	<!-- 별점 평균값 -->
	<select id="productRatingAVG" resultMap="productVO">
		UPDATE PRODUCT SET PRODUCT_STAR = 
		(SELECT NVL(ROUND(AVG(R.PRODUCT_REVIEW_BOARD_RATING),0),0) STAR_AVG
		FROM PRODUCT_REVIEW_BOARD R
		JOIN PRODUCT P ON(P.PRODUCT_ID = R.PRODUCT_ID)
		WHERE P.PRODUCT_ID = #{productId})
		WHERE PRODUCT_ID = #{productId}
	</select>
	 

</mapper>